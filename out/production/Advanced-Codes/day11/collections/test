struct superblock {
  uint size;         // Size of file system image (blocks)                      文件系统大小，也就是一共多少块
  uint nblocks;      // Number of data blocks                                   数据块数量
  uint ninodes;      // Number of inodes.                                        //i结点数量
  uint nlog;         // Number of log blocks                                    //日志块数量
  uint logstart;     // Block number of first log block                         /        /第一个日志块块号
  uint inodestart;   // Block number of first inode block                       //第一个i结点所在块号
  uint bmapstart;    // Block number of first free map block                    //第一个位图块块号
};



#define NINODES 200
#define MAXOPBLOCKS  10
#define LOGSIZE      (MAXOPBLOCKS*3)
#define FSSIZE       1000
#define IPB           (BSIZE / sizeof(struct dinode))


int nbitmap = FSSIZE/(BSIZE*8) + 1;
int ninodeblocks = NINODES / IPB + 1;
int nlog = LOGSIZE;

int nmeta = 2 + nlog + ninodeblocks + nbitmap;
int nblocks = FSSIZE - nmeta;

int logstart = 2;
int inodestart = 2 + nlog;
int bmapstart = 2 + nlog + ninodeblocks;



struct dirent {
  ushort inum;
  char name[DIRSIZ];
};
